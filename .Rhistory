1 + 1
c <- rbinom(1, 1, 0.5)
z <- 5
while (z >= 3) && (z <= 10) {
test
z <- 5
while (z >= 3 && z <= 10) {
print(z)
c <- rbinom(1, 1, 0.5)
if (c == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
c <- rbinom(1, 1, 0.5)
if (c == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
c <- rbinom(1, 1, 0.5)
if (c == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
c <- rbinom(1, 1, 0.5)
if (c == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
c <- rbinom(1, 1, 0.5)
if (c == 1) {
z <- z + 1
} else {
z <- z - 1
}
}
add2 <- function(x, y) {
x + y
}
add2(3,5)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 10)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
?solve
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinv <- function(inv) i <<- inv
getinv <- function() i
list(set = set, get = get,
setinv = setmeaninv,
getinv = getinv)
}
## Get inverce matrix from the cache if there is one otherwise
## compute it and put to the cache
cacheSolve <- function(x, ...) {
i <- x$getinv()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinv(i)
i
}
m <- rbind(c(1, -1/4), c(-1/4, 1))
mc <- makeCacheMatrix(m)
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinv <- function(inv) i <<- inv
getinv <- function() i
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
mc <- makeCacheMatrix(m)
mc
mc$get()
cacheSolve(mc)
cacheSolve(mc)
setwd("D:/R/Coursera/ExData_Plotting1")
power.consumption <- read.table("household_power_consumption.txt")
?read.table
power.consumption <- read.table("household_power_consumption.txt", sep = ";", header = T)
power.consumption <- read.table("household_power_consumption.txt", sep = ";", header = T, na.strings = "?")
head(power.consumption)
head(power.consumption, 1000)
head(power.consumption, 100)
?as.Date
as.Date(power.comsumption[1,1])
as.Date(power.consumption[1,1])
as.Date(power.consumption[1,1], "%d/%m/%Y")
power.consumption[:,1] <- as.Date(power.consumption[:,1], "%d/%m/%Y")
power.consumption[ ,1] <- as.Date(power.consumption[ ,1], "%d/%m/%Y")
?as.Time
power.consumption <- read.table("household_power_consumption.txt", sep = ";", header = T, na.strings = "?")
library(dplyr)
power <- filter(power.consumption, Date == "01/02/2007" | Date == "02/02/2007")
power.consumption[1,1]
as.Character(power.consumption[1,1])
as.character(power.consumption[1,1])
power <- filter(power.consumption, as.character(Date) == "01/02/2007" | as.character(Date) == "02/02/2007")
as.character(power.consumption[1,1]) == "16/12/2006"
power <- power.consumption[as.character(power.consumption$Date) == "01/02/2007" | as.character(power.consumption$Date) == "02/02/2007",]
power <- power.consumption[as.character(power.consumption$Date) == "01/02/2007",]
power <- power.consumption[as.character(power.consumption$Date) == "02/01/2007",]
tt <- as.character(power.consumption$Date) == "02/01/2007"
top(tt, 1000)
head(tt, 1000)
tt <- as.character(power.consumption$Date) == "16/12/2006"
head(tt, 1000)
tt <- as.character(power.consumption$Date) == "02/02/2007"
table(tt)
tt <- as.character(power.consumption$Date) == "16/12/2006"
table(tt)
power <- power.consumption[as.character(power.consumption$Date) == "1/2/2007" | as.character(power.consumption$Date) == "2/2/2007",]
power.consumption <- power.consumption[as.character(power.consumption$Date) == "1/2/2007" | as.character(power.consumption$Date) == "2/2/2007",]
power <- filter(power.consumption, as.character(Date) == "01/02/2007" | as.character(Date) == "02/02/2007")
power <- filter(power.consumption, as.character(Date) == "1/2/2007" | as.character(Date) == "2/2/2007")
power.consumption <- read.table("household_power_consumption.txt", sep = ";", header = T, na.strings = "?", colClasses = c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
power <- filter(power.consumption, as.character(Date) == "1/2/2007" | as.character(Date) == "2/2/2007")
power <- filter(power.consumption, Date == "1/2/2007" | Date == "2/2/2007")
power.consumption <- filter(power.consumption, Date == "1/2/2007" | Date == "2/2/2007")
power.consumption[ ,1] <- as.Date(power.consumption[ ,1], "%d/%m/%Y")
?strptime
power.consumption[1,2]
power.consumption[2,2]
power.consumption[200,2]
strptime(power.consumption[200,2])
strptime(power.consumption[200,2], "%H:%M:%S")
strptime(c(power.consumption[200,1], "-", power.consumption[200,2], "%d/%m/%Y-%H:%M:%S")
)
strptime(c(power.consumption[200,1], "-", power.consumption[200,2]), "%d/%m/%Y-%H:%M:%S")
c(power.consumption[200,1], "-", power.consumption[200,2]
)
power.consumption[200,1:2]
paste(power.consumption[200,1:2], collapse = "-")
power.consumption <- read.table("household_power_consumption.txt", sep = ";", header = T, na.strings = "?", colClasses = c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
power.consumption <- filter(power.consumption, Date == "1/2/2007" | Date == "2/2/2007")
paste(power.consumption[200,1:2], collapse = "-")
strptime(paste(power.consumption[200,1:2], collapse = "-"), "%d/%m/%Y-%H:%M:%S")
power.consumption$datetime <- strptime(paste(power.consumption[200,1:2], collapse = "-"), "%d/%m/%Y-%H:%M:%S")
head(power.consumption)
?hist
hist(power.consumption$Global_active_power)
hist(power.consumption$Global_active_power, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
?png
png(filename = "plot1")
hist(power.consumption$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
dev.off()
png(filename = "plot1.png")
hist(power.consumption$Global_active_power, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)")
dev.off()
?plot
?with
with(power.consumption, {hist(Global_active_power)})
?plot
with(power.consumption, {plot(datetime, Global_active_power)})
?axis
axis(1, at = c(as.Date(2007-02-01), as.Date(2007-02-02), as.Date(2007-02-03)))
axis(1, at = c(as.Date("2007-02-01"), as.Date("2007-02-02"), as.Date("2007-02-03")))
with(power.consumption, {plot(as.numeric(as.POSIXct(datetime)), Global_active_power)})
View(power.consumption)
View(power.consumption)
power.consumption$datetime <- strptime(paste(power.consumption[,1:2], collapse = "-"), "%d/%m/%Y-%H:%M:%S")
View(power.consumption)
?paste
power.consumption$datetime <- strptime(paste(power.consumption[,1], power.consumption[,2], sep = "-"), "%d/%m/%Y-%H:%M:%S")
View(power.consumption)
with(power.consumption, {plot(datetime, Global_active_power)})
?plot
?lines
with(power.consumption, {lines(datetime, Global_active_power)})
with(power.consumption, {lines(datetime, Global_active_power)})
with(power.consumption, {plot(datetime, Global_active_power, type = "n")})
with(power.consumption, {lines(datetime, Global_active_power)})
?plot
with(power.consumption, {plot(datetime, Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")})
with(power.consumption, {lines(datetime, Global_active_power)})
with(power.consumption, {plot(datetime, Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)"); lines(datetime, Global_active_power)})
png(filename = "plot2.png")
with(power.consumption, {plot(datetime, Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(datetime, Global_active_power)})
dev.off()
View(power.consumption)
View(power.consumption)
?lines
with(power.consumption, {plot(datetime, Global_active_power, type = "n", xlab = "", ylab = "Energy sub metering"); lines(datetime, Sub_metering_1)})
with(power.consumption, {plot(datetime, Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering"); lines(datetime, Sub_metering_1)})
with(power.consumption, {lines(datetime, Sub_metering_2, color = "red")})
with(power.consumption, {lines(datetime, Sub_metering_2, col = "red")})
with(power.consumption, {lines(datetime, Sub_metering_3, col = "blue")})
?legend
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lwd = 1)
with(power.consumption, {plot(datetime, Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lwd = 1)})
png(filename = "plot3.png")
with(power.consumption, {plot(datetime, Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lwd = 1)})
dev.off()
with(power.consumption, {plot(datetime, Voltage, type = "n", xlab = "", ylab = "Energy sub metering"); lines(datetime, Voltage)})
with(power.consumption, {plot(datetime, Global_reactive_power, type = "n", xlab = "", ylab = "Energy sub metering"); lines(datetime, Global_reactive_power)})
par(mfrow=c(2,2))
with(power.consumption, {plot(datetime, Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(datetime, Global_active_power)
plot(datetime, Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lwd = 1)
plot(datetime, Voltage, type = "n", ylab = "Voltage")
lines(datetime, Voltage)
plot(datetime, Global_reactive_power, type = "n")
lines(datetime, Global_reactive_power)})
with(power.consumption, {plot(datetime, Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(datetime, Global_active_power)
plot(datetime, Voltage, type = "n", ylab = "Voltage")
lines(datetime, Voltage)
plot(datetime, Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lwd = 1)
plot(datetime, Global_reactive_power, type = "n")
lines(datetime, Global_reactive_power)})
png(filename = "plot4.png")
par(mfrow=c(2,2))
with(power.consumption, {plot(datetime, Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(datetime, Global_active_power)
plot(datetime, Voltage, type = "n", ylab = "Voltage")
lines(datetime, Voltage)
plot(datetime, Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lwd = 1)
plot(datetime, Global_reactive_power, type = "n")
lines(datetime, Global_reactive_power)})
dev.off()
?legend
library(dplyr)
power.consumption <- read.table("household_power_consumption.txt", sep = ";", header = T, na.strings = "?",
colClasses = c("character", "character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
power.consumption <- filter(power.consumption, Date == "1/2/2007" | Date == "2/2/2007")
power.consumption$datetime <- strptime(paste(power.consumption[,1], power.consumption[,2], sep = "-"), "%d/%m/%Y-%H:%M:%S")
png(filename = "plot4.png")
par(mfrow=c(2,2))
with(power.consumption, {plot(datetime, Global_active_power, type = "n", xlab = "", ylab = "Global Active Power (kilowatts)")
lines(datetime, Global_active_power)
plot(datetime, Voltage, type = "n", ylab = "Voltage")
lines(datetime, Voltage)
plot(datetime, Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lwd = 1, bty = "n")
plot(datetime, Global_reactive_power, type = "n")
lines(datetime, Global_reactive_power)})
dev.off()
png(filename = "plot4.png")
par(mfrow=c(2,2))
with(power.consumption, {plot(datetime, Global_active_power, type = "n", xlab = "", ylab = "Global Active Power")
lines(datetime, Global_active_power)
plot(datetime, Voltage, type = "n", ylab = "Voltage")
lines(datetime, Voltage)
plot(datetime, Sub_metering_1, type = "n", xlab = "", ylab = "Energy sub metering")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lwd = 1, bty = "n")
plot(datetime, Global_reactive_power, type = "n")
lines(datetime, Global_reactive_power)})
dev.off()
